/* AdRem Client.js v5.44 2020 Copyright Tomasz Kunicki, AdRem Software, all rights reserved */
(function(global,factory){"use strict";let url;if(typeof define==="function"&&define.amd){url=decodeURIComponent(global.location.pathname);define("client",["jquery"],function(jQuery){return factory(global,jQuery,url,false)})}else{if(global.location!==undefined){url=decodeURIComponent(global.location.pathname)}else{url=""}return factory(global,global.jQuery,url,global.process!=null&&global.process.versions!=null&&global.process.versions.node!=null)}})(typeof window==="undefined"?global:window,function(global,jQuery,locationUrl,isNodeJS){"use strict";const adrem=global.adrem||{};let httpRequest,httpURL,fs;if(adrem.defined){return adrem}adrem.defined=true;adrem.isEmbedded=global.__SendRequest!==undefined&&typeof global.__SendRequest==="function";adrem.isNodeJS=isNodeJS;adrem.isBrowser=global.window!=null&&global.fetch!=null;adrem.pageUrl=locationUrl;adrem.useWebSockets=!adrem.isEmbedded&&global.WebSocket!=null;adrem.traceLocaRequest=false;adrem.traceEvents=false;adrem.traceEvents=false;adrem.reloadOnLogout=true;adrem.defaultRequestTimeout=15*1e3;var class2type={};"Boolean,Number,String,Function,Array,Date,RegExp,Object,Error,Symbol".split(",").forEach(name=>class2type["[object "+name+"]"]=name.toLowerCase());if(isNodeJS){fs=require("fs");if(fs.existsSync(require("path").join(__dirname,"webapp.js"))){require("./webapp.js");adrem.isEmbedded=true}else{httpRequest=require("request");httpURL=require("url")}}function isArgumentsAsObject(arg){return typeof arg==="object"&&(typeof arg.params==="object"||typeof arg.callback==="function")}function isPlainObject(obj){function isWindow(obj){return obj!=null&&obj===obj.window}function toType(obj){if(obj==null){return obj+""}return typeof obj==="object"||typeof obj==="function"?class2type[class2type.toString.call(obj)]||"object":typeof obj}if(toType(obj)!=="object"||obj.nodeType||isWindow(obj)){return false}if(obj.constructor&&!hasOwnProperty.call(obj.constructor.prototype,"isPrototypeOf")){return false}return true}adrem.extend=function(){let options,name,src,copy,copyIsArray,clone,target=arguments[0]||{},i=1;const length=arguments.length;let deep=false;if(typeof target==="boolean"){deep=target;target=arguments[1]||{};i=2}if(typeof target!=="object"&&typeof target!=="function"){target={}}if(length===i){target=this;--i}for(;i<length;i++){if((options=arguments[i])!=null){for(name in options){src=target[name];copy=options[name];if(target===copy){continue}if(deep&&copy&&(isPlainObject(copy)||(copyIsArray=Array.isArray(copy)))){if(copyIsArray){copyIsArray=false;clone=src&&Array.isArray(src)?src:[]}else{clone=src&&isPlainObject(src)?src:{}}target[name]=adrem.extend(deep,clone,copy)}else if(copy!==undefined){target[name]=copy}}}}return target};function findObj(namespace,root){const path=namespace.split(".");let i,len,obj=root||global,prop;for(i=0,len=path.length;i<len;i+=1){prop=path[i];if(obj[prop]===undefined){obj[prop]={}}obj=obj[prop]}return obj}function beginGroup(message){if(console.group){console.group(message)}else{console.log(message)}}function endGroup(){if(console.groupEnd){console.groupEnd()}}function traceResponse(request,response){const data=typeof response==="string"?JSON.parse(response):response;beginGroup("<-- Response "+request.url);if(Array.isArray(data)&&console.table!=null){console.table(data)}else{console.log(data)}endGroup()}function embeddedRequestHandler(client,request,handler){if(adrem.traceLocaRequest){beginGroup("--\x3e Request "+request.url);console.log(request);endGroup()}global.__SendRequest(request.url,request.intf,request.method,JSON.stringify(request.data),function(status,response){if(adrem.traceLocaRequest){traceResponse(request,response)}if(typeof response==="string"){handler({responseText:response||""},status)}else{handler({response:response},status)}})}function ajaxRequestHandler(client,request,callback){const method=request.method!==undefined?request.intf+"."+request.method:undefined;function browserRequest(request,callback){let url=client.urlPrefix+request.url+(method!=null?"&method="+method:"");const controller=new global.AbortController,timer=setTimeout(()=>controller.abort(),request.timeout||adrem.defaultRequestTimeout);if(client.urlFilter!=null&&typeof client.urlFilter==="function"){url=client.urlFilter(url)||url}fetch(url,{method:request.data===undefined||request.data===null?"GET":"POST",cache:"no-cache",body:JSON.stringify(request.data),signal:controller.signal,headers:{"Content-Type":"application/json","x-sid":client.sid}}).then(async response=>{if(response==null||!response.ok&&response.status===449){if(client.connection.reloadOnLogout){global.location.reload()}}else{response.response=await response.json();return response}}).then(response=>{if(response!=null){callback(response,response.ok)}}).catch(err=>{callback({status:0,statusText:"timeout",ok:false},false)}).finally(()=>clearTimeout(timer))}function nodeJSRequest(request,callback){let path,url;const requestParts=request.url.split("?"),queryString={};if(request.url[0]!=="/"){url=client.connection.pageUrl+requestParts[0]}else{path=httpURL.parse(client.connection.pageUrl);path.pathname=requestParts[0];url=httpURL.format(path)}if(method!==undefined&&method!==""){queryString.method=method}if(requestParts.length>1){requestParts[1].split("&").forEach(function(p){const v=p.split("=");queryString[v[0]]=v[1]})}if(client.urlFilter!=null&&typeof client.urlFilter==="function"){url=client.urlFilter(url)||url}httpRequest(url,{method:request.data===undefined||request.data===null?"GET":"POST",timeout:request.timeout||adrem.defaultRequestTimeout,qs:queryString,gzip:true,json:request.data,strictSSL:false,headers:{"x-sid":client.sid}},function(err,response,body){client.lastError=undefined;if(response!=null&&response.statusCode===200){if(typeof body!=="string"){body=JSON.stringify(body)}callback({responseText:body},true)}else{client.lastError=err;callback({},false)}})}if(adrem.isBrowser){browserRequest(request,callback)}else if(adrem.isNodeJS){nodeJSRequest(request,callback)}else{console.error("No xhr library found");throw"No xhr library found"}}function AdRemLocalProvider(requestHandler,connection){this.connection=connection||adrem;global.__dispatchEvents=function(events){if(adrem.traceEvents){console.log(">> Events Received >> ",events)}try{if(!Array.isArray(events)){connection.Client.fireEvent(events.name.toLowerCase(),events)}else{events.forEach(ev=>connection.Client.fireEvent(ev.name.toLowerCase(),ev))}}catch(e){console.error(e.stack)}};this.request=function(request){request.queue=true;requestHandler(connection.Client,request,function(response,success){request.callback(request,response,success)})}}function AdRemRemoteProvider(requestHandler,retentionTime,connection){let tid=1;const aTime=retentionTime||25,me=this,apiGroups=[];let timerId=null;this.connection=connection||adrem;function scheduleTasks(aTask){if(timerId==null){timerId=global.setTimeout(function(){timerId=null;aTask()},aTime)}}function doProcessRequests(url,requests,onFinished){const data=requests.map(rq=>{rq.tid=tid;tid+=1;return{action:rq.intf,method:rq.method,data:rq.data,type:"rpc",tid:rq.tid}});requestHandler(connection.Client,{url:url,data:data,scope:me},function(pendingRequests){return function(response,success){let id,i,baseTid,rq,responses;if(success){baseTid=pendingRequests[0].tid;responses=response.responseText!=null?JSON.parse(response.responseText):response.response;responses=Array.isArray(responses)?responses:[responses];for(i=0;i<responses.length;i+=1){id=responses[i].tid;rq=pendingRequests[id-baseTid];rq.callback(rq,{response:responses[i]},success)}}else{for(i=0;i<pendingRequests.length;i+=1){rq=pendingRequests[i];rq.callback(rq,{responseText:response.responseText,statusText:response.statusText},success)}}onFinished()}}(requests))}function processRequests(){apiGroups.forEach(g=>{if(!g.pending&&g.requests.length>0){const list=g.requests;g.requests=[];doProcessRequests(g.url,list,function(){g.pending=false;if(g.requests.length>0){processRequests()}})}})}function groupRequest(rq){let group=apiGroups.find(g=>g.url===rq.url);if(group==null){group={url:rq.url,pending:false,requests:[]};apiGroups.push(group)}group.requests.push(rq)}this.request=function(request){groupRequest(request);scheduleTasks(processRequests)}}function AdremPollingProvider(api,requestHandler,client){const pollingTime=api.interval||50,errorPollingTime=60*1e3;this.dispatchEvents=((response,success)=>{let i,len;const reply=success?response.response||JSON.parse(response.responseText):null;if(success&&reply!=null){if(Array.isArray(reply)){for(i=0,len=reply.length;i<len;i+=1){const rp=reply[i];if(rp.name!=null&&client.hasListener(rp.name.toLowerCase())){client.fireEvent(rp.name.toLowerCase(),rp)}}}else if(reply.name!=null&&client.hasListener(reply.name.toLowerCase())){client.fireEvent(reply.name.toLowerCase(),reply)}if(!client.connection.webSocketsMode()){global.setTimeout(pollEvents,pollingTime)}}else{if(!client.connection.webSocketsMode()){global.setTimeout(pollEvents,errorPollingTime)}}});const pollEvents=()=>{requestHandler(client,{url:this.api.url,timeout:this.api.timeout||6e4,scope:this},(response,success)=>this.dispatchEvents(response,success))};this.api=api;if(!client.connection.webSocketsMode()){global.setTimeout(()=>{if(!client.connection.webSocketsMode()){pollEvents()}},500)}}function AdRemWebSocketProvider(ajaxProvider){let socket,lastTid=1,url,i;const client=ajaxProvider.connection.Client||adrem.Client,waitQueue=[];let socketWaitTimer=null;const pending=new Map;this.useWebSocket=function(){const wsProtocol=global.location.protocol.toUpperCase()==="HTTPS:"?"wss://":"ws://";if(client.connection.useWebSockets){if(client.sid===undefined||client.sid===0){console.log("Can't create websocket - no SID ",client);client.connection.socket=undefined;socket=undefined;return false}else{try{url=locationUrl;i=url.length-1;while(url[i]!=="/"&&i>0){i--}if(url[i]==="/"){url=url.substr(0,i+1)}socket=new global.WebSocket(wsProtocol+client.connection.$host+url+client.sid);if(!isNodeJS){window.addEventListener("unload",function(){if(socket!=null){socket.close();socket=undefined}})}socket.onerror=function(err){if(console){console.log("WebSocket error, falling back to AJAX RPC!",err)}client.connection.useWebSockets=false;client.connection.socket=undefined;socket=undefined};socket.onclose=function(){if(console){client.fireEvent("connection-closed")}socket=undefined};socket.onmessage=function(ev){const[prefix,data]=ev.data.split("");if(socket==null){return}if(prefix==="e"){client.connection.api.events.provider.dispatchEvents({responseText:data},true)}else if(prefix==="r"){const response=JSON.parse(data);const request=pending.get(response.tid);pending.delete(response.tid);request.callback(request,{response:response},true)}else{console.log("Invalid message prefix");socket.close();socket=undefined;client.fireEvent("connection-closed")}};return true}catch(e){console.log("Error opening websocket ",e);client.connection.useWebSockets=false;client.connection.socket=undefined;socket=undefined;return false}}}return client.connection.useWebSockets};client.connection.webSocketsMode=function(){return client.connection.useWebSockets&&socket!==undefined&&socket.readyState===socket.OPEN};function doRequest(request){const api=request.url.split("=")[1];let rq;if(client.connection.useWebSockets&&client.connection.webSocketsMode()){lastTid+=1;pending.set(lastTid,request);rq={dat:request.data,call:request.intf+"."+request.method,tid:lastTid};socket.send(api+""+JSON.stringify(rq))}else{ajaxProvider.request(request)}}function waitForConnect(){if(!client.connection.useWebSockets||socket==null||socket.readyState===socket.OPEN){waitQueue.forEach(doRequest);waitQueue.length=0;socketWaitTimer=null}else{socketWaitTimer=global.setTimeout(waitForConnect,10)}}this.request=function(request){if(client.connection.useWebSockets&&socket!==undefined&&socket.readyState===socket.CONNECTING){waitQueue.push(request);if(socketWaitTimer==null){socketWaitTimer=global.setTimeout(waitForConnect,10)}}else{doRequest(request)}}}function EventManager(){const events=new Map;this.fireEvent=function(eventId,...args){const listeners=events.get(eventId.toLowerCase());if(listeners!=null){listeners.forEach(listener=>listener.fn.call(listener.scope,...args))}};this.on=function(eventId,fn,scope){if(Array.isArray(eventId)){eventId.forEach(e=>this.on(e,fn,scope))}else{const ev={fn:fn,scope:scope},eId=eventId.toLowerCase(),listeners=events.get(eId);if(listeners==null){events.set(eId,[ev])}else{listeners.push(ev)}}};this.un=function(eventId,fn,scope){let listeners,i,rec;if(Array.isArray(eventId)){eventId.forEach(e=>this.un(e,fn,scope))}else{eventId=eventId.toLowerCase();listeners=events.get(eventId);if(listeners!=null){for(i=listeners.length-1;i>=0;i-=1){rec=listeners[i];if(rec.fn===fn&&rec.scope===scope){listeners.splice(i,1)}}if(listeners.length===0){events.delete(eventId)}}}};this.hasListener=function(eventId){return events!=null&&events.has(eventId)}}function ModuleResources(){const scripts=document.getElementsByTagName("script"),path=scripts[scripts.length-1].src.split("/").slice(0,-1).join("/");fetch(path+"/text.res.json").then(result=>result.json()).then(json=>adrem.extend(this,json))}function proxifyFunc(owner,name){const parent=owner[name];function fn(...args){return parent.call(owner,...args)}fn.asTask=function(...args){return parent._asTask.call(owner,parent.api,parent,...args)};fn.asURL=function(...args){return parent._asURL.call(owner,parent.api,parent,...args)};owner[name]=fn}function destroyHandler(){if(this.$$$destroyed!==true){this.$$$destroyed=true;this["@destroy"]();if(typeof this.__destroy__==="function"){this.__destroy__()}}}function RemoteClient(hostAddr,applicationId,connection){let _asyncId=1;const that=this;let remoteProvider,appId="",tokenId;RemoteClient.inherited.constructor.apply(this);this.status={logged:false};this.connection=connection;this.connection.Client=this;function createRemoteObject(apiObj,actionName,instanceId){const obj=Object.create(connection[apiObj.name][actionName]);if(actionName!=="IObjAsyncCallTask"){Object.keys(Object.getPrototypeOf(obj)).filter(key=>typeof obj[key]==="function").forEach(name=>proxifyFunc(obj,name))}obj.id+="$"+instanceId;return obj}function asURL(objAPI,method){const params=Array.prototype.slice.call(arguments,2),action=this.id!=null?this.id.split(".")[1]:method.action;return objAPI.dataUrl+"?method="+objAPI.name+"."+action+"."+method.method+"&params="+encodeURIComponent(JSON.stringify(params))+"&sid="+that.sid}const RequestHandler={checkStatus(){this.finished=false;this.GetStatus(result=>{Object.assign(this,result);if(this.finished){that.fireEvent(this.id,{eventid:0,data:this.reply},this)}else{if(this.callback!=null){this.callback.call(this.scope,this);this.progressTask=global.setTimeout(()=>this.checkStatus(),this.updateTime)}}})},cancel(notify=false){if(!this.finished&&this.progressTask!=null){this.finished=true;global.clearTimeout(this.progressTask);this.progressTask=null}if(!notify){that.un(this.id,this.eventHandler,this)}},eventHandler(e){if(this.progressTask!==undefined){global.clearTimeout(this.progressTask)}this.finished=true;if(this.callback!=null){if(e.data!=null){Object.keys(e.data).forEach(key=>this[key]=e.data[key])}this.callback.call(this.scope,this)}that.un(this.id,this.eventHandler,this);this["@destroy"]();this.destroy()},__destroy__(){that.fireEvent(this.id,{eventid:0},this);that.un(this.id,this.eventHandler,this);this.callback=null}};function asTask(objAPI,method,params){const request=new(findObj(objAPI.namespace,connection).IObjAsyncCallTask);let args,updateTime,callback,scope;if(isArgumentsAsObject(params)){args=params.params;updateTime=params.updateTime;callback=params.callback;scope=params.scope}else{args=Array.prototype.slice.call(arguments,3,3+method.len);updateTime=arguments[2];callback=arguments[2+method.len+1];scope=arguments[2+method.len+2]}Object.assign(request,{callback:callback,scope:scope||request,progress:0,updateTime:updateTime},RequestHandler);that.on(request.id,request.eventHandler,request);if(updateTime>0&&callback!==undefined){request.progressTask=global.setTimeout(()=>request.checkStatus(),updateTime)}request.Call(this.id.split(".").pop(),method.method,args,scope);return request}function bindClientCalls(me,api){let i,len;const actions=api.actions;let intf,new_cls,fn,ms,m,cls,aapi;function globalEventsEventId(id){return api.name+"#"+id.toString(16)}function NewObject(intface,initParam){let obj,ix,objId;initParam=initParam||null;if(arguments[2]===undefined||typeof arguments[2]==="function"||typeof arguments[2]==="object"){objId=_asyncId;_asyncId+=1;ix=2}else{ix=3;objId=arguments[2]}obj=createRemoteObject.call(me,api,intface,objId);if(initParam!==null){if(arguments.length>ix){obj["@create"].apply(this,Array.prototype.concat(initParam,Array.prototype.slice.call(arguments,ix)))}else{obj["@create"](initParam)}}return obj}for(intf in actions){if(actions.hasOwnProperty(intf)){cls=findObj(api.namespace+"."+intf,connection);if(intf==="IGlobalEvents"){cls.eventId=globalEventsEventId}else if(intf!=="IClientServices"&&intf!=="Security"){if(cls.id===undefined){cls.id=api.name+"."+intf}if(cls.id.indexOf("$")<0){new_cls=NewObject.bind(that,intf);ms=actions[intf];for(i=0,len=ms.length;i<len;i+=1){m=ms[i];new_cls[m.name]=cls[m.name]}new_cls.id=cls.id;findObj(api.namespace,connection)[intf]=new_cls;cls=new_cls}ms=actions[intf];aapi=api.api!==undefined?api.api:api;for(i=0,len=ms.length;i<len;i+=1){fn=cls[ms[i].name];fn.api=aapi;fn._asTask=asTask;fn._asURL=asURL;fn._cls=cls;fn.asTask=asTask.bind(cls,aapi,fn);fn.asURL=asURL.bind(cls,aapi,fn)}cls.destroy=destroyHandler}}}return api}function getRequestHandler(){return adrem.isEmbedded?embeddedRequestHandler:ajaxRequestHandler}if(!adrem.isEmbedded){remoteProvider=new AdRemRemoteProvider(getRequestHandler(),25,connection);remoteProvider=new AdRemWebSocketProvider(remoteProvider)}else{remoteProvider=new AdRemLocalProvider(getRequestHandler(),connection)}appId=applicationId||"app";if(appId.split(".")[1]!==undefined){appId=""}else{appId=":"+appId}appId=(hostAddr||"").split("/")[0]+appId;tokenId="tid:"+appId;this.start=function(){let ix=0,urlParts,scope,callback;const self=this;let sid;const requestHandler=getRequestHandler(),sidItem="sid:"+appId;function doNotify(status){if(callback!==undefined){callback.call(scope,status)}self.status=status;if(self.connection.useWebSockets){remoteProvider.useWebSocket()}self.fireEvent("clientstarted",status);if(status.logged){self.fireEvent("login",status)}}this.urlPrefix="";this.appPrefix="";function splitURL(url){const appParts=url.split("/"),urlParts=appParts.splice(0,3);return{urlPrefix:urlParts.join("/")+"/",appPrefix:appParts.join("/")}}if(arguments.length>0){if(typeof arguments[ix]==="string"){urlParts=splitURL(arguments[ix]);this.urlPrefix=urlParts.urlPrefix;this.appPrefix=urlParts.appPrefix;ix+=1}if(ix<arguments.length&&typeof arguments[ix]==="function"){callback=arguments[ix];ix+=1;if(ix<arguments.length&&typeof arguments[ix]==="object"){scope=arguments[ix]}}}else{scope=global}if(global.sessionStorage!=null){sid=global.sessionStorage.getItem(sidItem);if(sid!=null){that.sid=sid}}requestHandler(this,{url:this.appPrefix+"api.json"},function(response,success){let aToken,data;if(success){data=response.response||JSON.parse(response.responseText);if(data.api!=null&&Array.isArray(data.api)){data.api.forEach(function(api){api.namespace=api.name;api.url=api.url.replace("//","/");if(api.dataUrl!=null){api.dataUrl=api.dataUrl.replace("//","/")}that.addAPI(api)})}that.sid=data.sid;that.authentication=data.authentication;that.loggedIn=false;if(global.sessionStorage!==undefined){global.sessionStorage.setItem(sidItem,that.sid)}if("Session"in that){aToken=global.sessionStorage!==undefined?global.sessionStorage.getItem(tokenId):undefined;if(aToken!==undefined&&aToken!==null){that.Session.Security.Authenticate(aToken,function(result){if(!result.Success){global.sessionStorage.removeItem(tokenId)}else{global.sessionStorage.setItem(tokenId,result.Token)}that.loggedIn=result.Success;doNotify({logged:result.Success,init:true})})}else{doNotify({logged:false,init:true})}}else{that.loggedIn=true;doNotify({logged:true,init:true})}}else{doNotify({logged:false,init:false})}});return false};this.logout=function(callback,scope){if("Session"in that){that.Session.Security.Logout(function(){global.sessionStorage.removeItem(tokenId);if(callback!==undefined){callback.call(scope)}that.fireEvent("logout")})}else{throw new Error("No login support")}};this.login=function(aName,aPassword,callback,scope){function getPassword(pass){if(that.authentication==="plain"){return pass}else{console.error("only plain authetication supported");return pass}}if("Session"in that){that.Session.Security.Login(aName,getPassword(aPassword),function(result){if(result.Success){if(global.sessionStorage!=null){global.sessionStorage.setItem(tokenId,result.Token)}that.loggedIn=true}if(typeof callback==="function"){callback.call(scope,result.Success)}that.fireEvent("login",{logged:result.Success,init:true})})}else{throw new Error("No login support")}};this.addAPI=function(api,force){let apiDef;if(api.api==null){if(connection.api===undefined){connection.api={}}if(connection.api[api.name]!==undefined&&force!==true){return}connection.api[api.name]=api;if(api.namespace!=null){findObj(api.namespace,connection)}}else{api.name=api.api.name}if(api.type==="remoting"){api.provider=remoteProvider;apiDef=new RemoteAPI(api,this)}else if(api.type==="polling"){api.provider=new AdremPollingProvider(api,getRequestHandler(),that)}if(api.type==="remoting"){bindClientCalls(apiDef,api)}return apiDef}}function RemoteAPI(api,client){const o=api.actions;let c,cls,m,ms,fn,i,len;this.url=api.url;this.namespace=findObj(api.namespace,client.connection);function handleRemoteResponse(request,result,success){let reply,ev;const method=request.intf+"."+request.method,callback=request.handler,errorHandler=request.errorHandler,scope=request.scope;function handledByCaller(param){return errorHandler!==undefined&&errorHandler(param)===true}if(success&&result&&(result.response!=null||result.responseText!=null)){reply=result.response||JSON.parse(result.responseText);if(reply.type==="exception"){if(!handledByCaller(reply.result)){ev=reply.result;ev.method=method;client.fireEvent("exception",ev)}return}}else if(success){reply={result:{success:false}}}if(success===false){ev={classname:"xhr",method:method,message:"error calling: "+method};if(!handledByCaller(ev)){client.fireEvent("exception",ev)}}else if(success&&callback!==undefined&&callback.call!==undefined){if(typeof callback==="function"){callback.call(scope,reply.result)}}}this.remoteCall=function(intf,method){let data,handler,errorHandler,scope,ix;const args=Array.prototype.slice.call(arguments,2),url=this.url;if(args[0]!==null&&isArgumentsAsObject(args[0])){data=args[0].params;handler=args[0].callback;scope=args[0].scope;errorHandler=args[0].errorHandler}else{data=null;ix=method.len;if(ix===0){data=undefined}handler=args[ix];ix+=1;if(args[ix]!==undefined&&typeof args[ix]==="function"){errorHandler=args[ix];ix+=1}scope=args[ix];if(method.len!==0){data=args.slice(0,method.len)}}if(handler!==undefined&&handler.call===undefined){throw new Error("Invalid parameters passed")}api.provider.request({url:url,intf:intf.id.split(".").pop(),method:method.name,data:data,handler:handler,errorHandler:errorHandler,scope:scope,callback:handleRemoteResponse},true)};function getFunction(self,m){return function(...args){self.remoteCall(this,m,...args)}}for(c in o){if(o.hasOwnProperty(c)){cls=findObj(api.namespace+"."+c,client.connection);cls.id=api.name+"."+c;ms=o[c];for(i=0,len=ms.length;i<len;i+=1){m=ms[i];fn=getFunction(this,m);fn.len=m.len;fn.action=c;fn.method=m.name;cls[m.name]=fn}}}}adrem.inherit=function(){const F=function(){};return function(C,P){F.prototype=P.prototype;C.prototype=new F;C.inherited=P.prototype;C.prototype.constructor=C}}();adrem.ModuleResources=ModuleResources;adrem.EventManager=EventManager;adrem.inherit(RemoteClient,adrem.EventManager);adrem.initClient=function(aHost,aAppId,connection){connection=connection||adrem;if(connection!==adrem){connection.useWebSocket=global.WebSocket!=null}connection.pageUrl=aHost;connection.$host=aHost;connection.reloadOnLogout=adrem.reloadOnLogout;connection.Client=new RemoteClient(aHost,aAppId,connection);connection.Client.isEmbedded=adrem.isEmbedded;connection.Client.sid="";return connection};function Connection(aHost,aAppId){return adrem.initClient(aHost,aAppId,this)}adrem.Connection=Connection;if(!isNodeJS){if(global.location!==undefined){adrem.initClient(global.location.host,global.location.pathname.split("/")[1],adrem)}Object.defineProperty(adrem,"isVisible",{get:function(){return global.document.visibilityState==null||global.document.visibilityState==="visible"}});if(document.visibilityState!=null){document.addEventListener("visibilitychange",function(){adrem.Client.fireEvent("$visible",global.document.visibilityState==="visible")})}}else{if(typeof module==="object"){module.exports.adrem=adrem}adrem.isVisible=true}if(adrem.isEmbedded){adrem.DispatchRequest=function(obj,result){obj.callback(obj,true,result)}}global.adrem=adrem;return adrem});