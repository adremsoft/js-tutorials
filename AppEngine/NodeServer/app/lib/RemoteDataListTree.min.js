/* RemoteDataListTree v1.83 2020 Copyright Tomasz Kunicki, AdRem Software, all rights reserved */
(function(){"use strict";const prv=Symbol("private");class RemoteDataListTreeNode extends adrem.EventManager{constructor(values,parentNode){super();this.id=values.Id;this.name=values.Name;if(values.Value!==null){this.value=values.Value}this.values=[];Object.defineProperty(this,"parent",{value:values.Parent,enumerable:false});Object.defineProperty(this,"parentNode",{value:parentNode,enumerable:false,configurable:true})}get childCount(){return this.children!=null?this.children.size:0}get path(){if(this._path==null){if(this.parentNode!=null){this._path=this.parentNode.path+"\\"+this.name}else{return this.name}}return this._path}_updateValues(){if(this.children){this.values=Array.from(this.children.values()).filter(c=>c.value!==undefined).map(c=>({id:c.id,name:c.name,value:c.value}))}else if(this._values.length>0){this.values.length=0}}_addChild(node){this.children=this.children!=null?this.children:new Map;if(!this.children.has(node.name)){this.children.set(node.name,node);this._notifyChildChanged();this._notifyChanged()}}_deleteNode(){if(this.children!==undefined){this.children.forEach(n=>n._deleteNode());this.children.clear()}if(this.parentNode){this.parentNode._childDeleted(this.id)}this._notifyDelete()}_childDeleted(childId){if(this.children.has(childId)){this.children.delete(childId);this._notifyChildChanged()}}_notifyParentChildChanged(child){if(this.parentNode!==undefined){this.parentNode._notifyChildChanged(child)}}_notifyDelete(){this.fireEvent("node-deleted");this._notifyParentChildChanged(this)}_notifyChanged(){this.fireEvent("changed",this);this._notifyParentChildChanged(this)}_notifyChildChanged(){this._updateValues();this.fireEvent("node-children-changed",this)}node(path){const parts=path.split("\\").filter(s=>s!=="");return parts.reduce((p,c)=>p!==undefined&&p.children!=null?p.children.get(c):undefined,this)}}class RemoteDataListTreeStore extends adrem.EventManager{constructor(api,source,callback,scope,connection){super();this.store=new adrem.RemoteDataListStore(api,250,connection);this.treeMap=new Map;this.store.on("record-changed",this.onRecordChanged,this);this.store.on("record-deleted",this.onRecordDeleted,this);this.store.on("changed",this.onTreeChanged,this);this.store.on("change-marker",this.onChangeMarker,this);if(source!=null&&source!==""){this.open(source,callback,scope)}}open(source,callback,scope){this.close(true);this.store.open(source,"",()=>{this.buildTree();if(typeof callback==="function"){callback.call(scope||this,this)}})}close(clear){if(this.store.model!=null){this.store.close();if(clear){if(this._root!=null&&this._root.childCount>0){this.root._deleteNode()}if(this.treeMap.size>0){this.treeMap.clear();setTimeout(()=>this.onTreeChanged(),0)}}}}finalize(){this.store.finalize();this.store.destroy();delete this.store}updateNodeByRec(rec){const node=this.treeMap.get(rec.values.Id);if(node==null){this.addNode(rec.values)}else{let changed=false;if(rec.values.Value!==undefined){node.value=rec.values.Value;changed=true}if(rec.values.Name!==undefined){node.name=rec.values.Name;changed=true}if(changed){node._notifyChanged()}}}deleteNodeByRec(rec){const id=rec.values.Id,node=this.treeMap.get(id);if(node!=null){this.fireEvent("node-deleted",node);node._deleteNode()}this.treeMap.delete(id)}onRecordChanged(rec){if(Array.isArray(rec)){rec.sort((a,b)=>a.values.Id>b.values.Id?1:-1,rec);rec.forEach(this.updateNodeByRec,this)}else{this.updateNodeByRec(rec)}}onRecordDeleted(rec){if(Array.isArray(rec)){rec.forEach(this.deleteNodeByRec,this)}else{this.deleteNodeByRec(rec)}}onTreeChanged(){this.fireEvent("changed")}onChangeMarker(markerData){const{path:path,marker:marker}=markerData||{};if(path!=null){const node=this.node(path);if(node!=null){node.fireEvent("node-change-marker",marker)}this.fireEvent("node-change-marker",markerData)}else{this.fireEvent("change-marker",marker)}}addNode(values){const parentNode=this.treeMap.get(values.Parent),node=new RemoteDataListTreeNode(values,parentNode);this.treeMap.set(node.id,node);if(parentNode!==undefined){parentNode._addChild(node)}else if(node.parent===-1){this.root=node}else{console.error("Tree internal error - parent node is missing.",values)}this.fireEvent("node-added",node)}node(path){return this.root===undefined?undefined:this.root.node(path)}buildTree(){if(this.store!==null){this.treeMap.clear();this.store.data.sort((a,b)=>a.values.Id-b.values.Id).forEach(rec=>this.addNode(rec.values))}}}class RemoteDataListTreeData{constructor(path,type,tree,defaultValue){this.id=++RemoteDataListTreeData.lastId;this.path=path[0]==="\\"?path:"\\"+path;this.name=path.split("\\").pop();this.type=type;this.events=new adrem.EventManager;this.default=defaultValue;this.persistent=false;this.attach(tree)}get value(){return this.node!=null?this.node.value:this.defaultValue}get values(){return this.node!=null?this.node.values:null}get childCount(){return this.node!=null?this.node.childCount:0}attach(tree,clear=false){if(clear){this.node=null}if(tree!==undefined){this.tree=tree}if(this.tree!=null){this.tree.on("node-added",this._onNodeAdd,this);const node=this.tree[prv].node(this.path);if(!clear&&node!=null){this.node=node;this._onNodeAdd(this.node);this.events.fireEvent("changed",this);this.events.fireEvent("node-children-changed",this)}}}on(...args){this.events.on(...args)}un(...args){this.events.un(...args)}query(query){if(this.type!=null&&this.tree!=null){return new Promise(resolve=>{this.tree[prv].store.perform("query",{path:this.path,type:this.type,query:query},(...args)=>resolve(...args))})}else{throw new Error("Missing data query type or tree not set")}}_onNodeAdd(node){if(node.path===this.path&&(!this.persistent||this.node==null)){this.node=node;["node-children-changed","changed"].forEach(e=>this.node.on(e,()=>this.events.fireEvent(e,this)));if(this.persistent){this.tree.on("node-change-marker",({path:path,marker:marker})=>{if(path===this.path){this.events.fireEvent("node-change-marker",this,marker)}})}else{this.node.on("node-change-marker",marker=>this.events.fireEvent("node-change-marker",this,marker))}this.node.on("node-deleted",this._onNodeDeleted,this);this.events.fireEvent("node-added",this)}}_onNodeDeleted(){if(!this.persistent){this.node=null;this.events.fireEvent("node-deleted",this)}}}RemoteDataListTreeData.lastId=1;class RemoteDataListTree{constructor(api,source,callback,scope,connection){this[prv]=new RemoteDataListTreeStore(api,source,callback,scope,connection)}static data(path,type,defaultValue){return new RemoteDataListTreeData(path,type,null,defaultValue)}open(source,callback,scope){this[prv].open(source,callback,scope)}close(clear=false){this[prv].close(clear)}on(...args){this[prv].on(...args)}un(...args){this[prv].un(...args)}destroy(){this[prv].finalize()}node(path){return this[prv].node(path)}data(path,type=path,defaultValue=null){return new RemoteDataListTreeData(path,type,this,defaultValue)}}adrem.RemoteDataListTree=RemoteDataListTree;if(typeof module==="object"){module.exports=RemoteDataListTree}})();