/* RemoteDataLists v3.45 2020 Copyright Tomasz Kunicki, AdRem Software, all rights reserved */
(function(global,factory){"use strict";if(typeof define==="function"&&define.amd){define("remoteDataLists",["client"],function(adrem){factory(adrem);return adrem.RemoteDataListStore})}else{factory(global.adrem)}})(typeof window==="undefined"?global:window,function(adrem){"use strict";const E_DATA_CHANGED=0,E_PROPERTIES_CHANGED=1,E_DATA_CHANGED_WITH_DATA=2,ENC_DEBUG="debug",ENC_WORK="work",ENC_REC="rec",ENC_OBJ="obj",asArray=function(data){return Array.isArray(data)?data:[data]},decodeRecordData=function(encoding,model,data,values){let len,i,ix,val;function fixDateField(fieldType,val){if(model.owner.autoDecodeDates&&fieldType===2&&typeof val==="string"){if(Date.create!=null){return Date.create(val)}else{return new Date(val)}}return val}if(encoding===ENC_DEBUG){model.fields.forEach((field,i)=>{const val=data[field.FieldName];if(val!==undefined){values[i]=fixDateField(model.fields[i].FieldType,val)}})}else{if(data[0]==="R"){len=model.fields.length;for(i=0;i<len;i++){values[i]=fixDateField(model.fields[i].FieldType,data[i+1])}}else if(data[0]==="C"){len=data.length;for(i=1;i<len;){ix=data[i++];val=data[i++];values[ix]=fixDateField(model.fields[ix].FieldType,val)}}}},decodeRecordKey=function(encoding,model,data){let i,ix,val,keyIx=model.keyIx;if(encoding===ENC_DEBUG){return data[model.key]}else{if(data[0]==="R"){return data[keyIx+1]}else{for(i=data.length-1;i>0;){val=data[i--];ix=data[i--];if(ix===keyIx){return val}}}}return null},DataListPropertyGroup=function DataListPropertyGroup(owner,cfg){const values={};let changes={},_get=function(p){return function(){let v=changes[p];if(v===undefined){v=values[p]}return v}},_set=function(p){return function(val){changes[p]=val;owner.fireEvent("property-changed",{name:p,value:val})}};this.getChanges=function(){return changes};this.clearChanges=function(){adrem.extend(values,changes);changes={}};this.getValues=function(){return values};this.update=function(cfg){Object.keys(cfg).forEach(p=>{if(values[p]!==cfg[p]){values[p]=cfg[p];if(!this.hasOwnProperty(p)){Object.defineProperty(this,p,{get:_get(p),set:_set(p),configurable:true,enumerable:true})}owner.fireEvent("property-changed",{name:p,value:values[p]})}});changes={}};this.isChanged=function(){return Object.keys(changes).length>0};this.update(cfg)},DataListFieldsAdapter=class DataListFieldsAdapter{constructor(model){model.fields.forEach((field,ix)=>{Object.defineProperty(this,field.FieldName,{set(value){const privateData=this._owner_._private_;privateData.changes[ix]=value;this._owner_.touch();privateData.model.notifyRecChanged(this._owner_)},get(){return this.getByIndex(ix)},configurable:true,enumerable:true})})}getByIndex(ix){if(this._owner_!=null){const privateData=this._owner_._private_,change=privateData.changes[ix];return change!==undefined?change:privateData.values[ix]}}},DataListRecordFactory=function(model){const adapter=new DataListFieldsAdapter(model);function DataListRecordValues(owner){Object.defineProperty(this,"_owner_",{value:owner,configurable:true})}DataListRecordValues.prototype=adapter;return DataListRecordValues},DataListRecord=function(){const toJson=typeof window!=="undefined"&&window.angular!=null?angular.toJson:JSON.stringify;function isObjectChanged(jsonRef,jsonObj){if(jsonRef!==jsonObj){return!adrem.deepEqual(JSON.parse(jsonRef),JSON.parse(jsonObj))}else{return false}}return class DataListRecord{constructor(model,encoding,cfg){let i,fields,val;const _private={key:undefined,values:[],changes:[],refs:[],model:model};Object.defineProperty(this,"_private_",{value:_private});this.values=new model.DataListValues(this);this.local={};this.lid=model.owner.lid;model.owner.lid+=1;fields=this._private_.model.fields;if(encoding===ENC_DEBUG){for(i=fields.length-1;i>=0;i--){_private.values[i]=cfg[fields[i].FieldName];_private.changes[i]=undefined}}else if(encoding===ENC_OBJ){for(i=fields.length-1;i>=0;i--){_private.values[i]=undefined;_private.changes[i]=cfg[fields[i].FieldName];if(i===this._private_.model.keyIx){_private.values[i]=_private.changes[i]}}}else if(encoding===ENC_REC){for(i=fields.length-1;i>=0;i--){_private.values[i]=cfg._private_.values[i];_private.changes[i]=cfg._private_.changes[i]}}else{this.update(encoding,cfg)}if(model.owner.objChangeDetection){for(i=fields.length-1;i>=0;i--){if(_private.changes[i]===undefined){val=_private.values[i];if(typeof val==="object"){_private.refs.push({ix:i,val:toJson(val)})}}}}_private.key=_private.values[this._private_.model.keyIx];if(this.getKey()!==undefined&&encoding!==ENC_OBJ){_private.changed=_private.model.getChangeStamp();_private.serverRev=_private.changed}else{this.touch()}}get store(){return this._private_.model.owner}getKey(){return this._private_.key}unlink(){Object.defineProperty(this,"_owner_",{value:undefined});delete this.values}setKey(key){if(this._private_.key===undefined){this._private_.values[this._private_.model.keyIx]=key;this._private_.key=key}else{throw new Error("Invalid attempt to change record key.")}}hasKey(){return this._private_.key!==undefined}isChanged(since){let i,ref;if(since===undefined){since=this._private_.serverRev||0}if(this._private_.model.owner.objChangeDetection){if(this._private_.refs.length>0){const _private=this._private_;for(i=_private.refs.length-1;i>=0;i-=1){ref=_private.refs[i];if(_private.changes[ref.ix]!==undefined){if(!isObjectChanged(ref.val,toJson(_private.changes[ref.ix]))){_private.changes[ref.ix]=undefined}else{_private.refs.splice(i,1)}}else{if(isObjectChanged(ref.val,toJson(_private.values[ref.ix]))){_private.changes[ref.ix]=_private.values[ref.ix];_private.refs.splice(i,1);this.touch()}}}}}return this._private_.changed>since}getValues(){function Values(fields,values){for(let i=fields.length-1;i>=0;i--){this[fields[i].FieldName]=values[i]}}return new Values(this._private_.model.fields,this._private_.values)}entriesOf(){const v=this._private_.values;return this._private_.model.fields.map((field,ix)=>[field.FieldName,v[ix]])}valuesOf(){return this._private_.values}getChanges(){const res={},key=this.getKey(),changes=this._private_.changes,values=this._private_.values;let hasChanges=false;this._private_.model.fields.forEach((field,i)=>{if(field.FieldData.Attributes!==2){if(changes[i]!==undefined){res[field.FieldName]=changes[i];hasChanges=true}else if(key===undefined){res[field.FieldName]=values[i];hasChanges=true}}});if(hasChanges){res[this._private_.model.key]=key;return res}else{return null}}clearChanges(){const _private=this._private_;if(_private.changed>_private.serverRev){for(let i=_private.changes.length-1;i>=0;i--){_private.changes[i]=undefined}_private.changed=_private.serverRev}}remove(){this._private_.model.owner.delByRec(this)}update(encoding,data){decodeRecordData(encoding,this._private_.model,data,this._private_.values);this.clearChanges();this._private_.serverRev=this._private_.model.getChangeStamp();this._private_.changed=this._private_.serverRev}touch(){this._private_.changed=this._private_.model.getChangeStamp()}}}(),DataListModel=class DataListModel{constructor(owner,data){Object.assign(this,data);this.owner=owner;this.keyIx=-1;this.changeRevision=0;this.DataListValues=new DataListRecordFactory(this);this.keyIx=this.fields.findIndex(f=>f.FieldName===this.key)}finalize(){delete this.DataListValues}newRecord(encoding,cfg){return new DataListRecord(this,encoding,cfg)}getChangeStamp(){this.changeRevision+=1;return this.changeRevision}notifyRecChanged(rec){this.owner.notifyChanged(rec)}},RemoteDataListStore=function(){function onClientEvent(e){if(e.eventid===E_DATA_CHANGED){this._needsRefresh=true}else if(e.eventid===E_PROPERTIES_CHANGED){this._needsRefreshProperties=true}else if(e.eventid===E_DATA_CHANGED_WITH_DATA){this._fastRefresh=false;this._doRefresh(e.data)}if(this._fastRefresh){this._fastRefresh=false;this.refresh()}}return class RemoteDataListStore extends adrem.EventManager{constructor(api,minRefTime,connection){super();const self=this;let minRefreshTime=minRefTime!=null&&typeof minRefTime==="number"?minRefTime:350;let autoTimer;this._map=new Map;this.data=[];this._deleted=[];this._needsRefresh=false;this._fastRefresh=false;this._needsRefreshProperties=false;this._updating=0;this._suppressedChangedNotification=false;this._propertyUpdating=false;this._dataEncoding=adrem.debug?ENC_DEBUG:ENC_WORK;this.objChangeDetection=false;this.autoDecodeDates=false;this.lid=1;this.refreshOnInvisible=adrem.isNodeJS;function autoRefresh(){if(!self.refreshOnInvisible&&!adrem.isVisible){autoTimer=null;return}if(self._needsRefresh||self._needsRefreshProperties){self.refresh()}self.commitProperties();if(minRefreshTime>0&&(self.refreshOnInvisible||adrem.isVisible)){autoTimer=setTimeout(autoRefresh,minRefreshTime)}else{autoTimer=null}}Object.defineProperty(this,"minRefreshTime",{get(){return minRefreshTime},set(value){minRefreshTime=value;if(autoTimer==null){autoRefresh()}else if(minRefreshTime<0){clearTimeout(autoTimer);autoTimer=null}}});if(connection==null&&typeof minRefTime==="object"){connection=minRefTime}this._connection=connection||adrem;this.properties={beginUpdate(){self._propertyUpdating=true},endUpdate(){self._propertyUpdating=false}};this._remoteData=new this._connection[api].IDataListStore({dataFormat:this._dataEncoding});this._connection.Client.on(this._remoteData.id,onClientEvent,this);if(!adrem.isNodeJS){adrem.Client.on("$visible",function(visible){if(visible&&autoTimer==null){autoRefresh()}})}if(minRefreshTime>=0){autoRefresh()}}deleteProperties(){Object.keys(this.properties).forEach(key=>{this.fireEvent("property-group-changed",key,{});delete this.properties[key]})}finalize(){if(this._remoteData!=null){this._connection.Client.un(this._remoteData.id,onClientEvent,this);this._remoteData.destroy();delete this._remoteData}this.deleteProperties();if(this.model!=null){this.model.finalize();delete this.model}}notifyChanged(data){if(this._updating===0){if(data!==undefined){this.fireEvent("record-changed",data)}this.fireEvent("changed")}else{this._suppressedChangedNotification=true}}notifyDeleted(data){if(this._updating===0){this.fireEvent("record-deleted",data);this.fireEvent("changed")}else{if(this._deleted.indexOf(data)<0){this.suppressedDeletes.push(data)}}}perform(...args){return this._remoteData.perform(...args)}asyncPerform(...args){return this._remoteData.perform.asTask(...args)}beginUpdate(){if(this._updating===0){this._suppressedChangedNotification=false;this.suppressedDeletes=[];if(this.model!=null){this.updateRevision=this.model.getChangeStamp()-1}}this._updating+=1}endUpdate(force){let changed=[],deleted=[];this._updating-=1;if(this._updating===0&&(this._suppressedChangedNotification||force===true)){if(this.hasListener("record-changed")){changed=this.data.filter(rec=>rec.isChanged(this.updateRevision))}if(this.hasListener("record-deleted")){deleted=this._deleted.filter(rec=>rec._private_.deleted>this.updateRevision);deleted=deleted.concat(this.suppressedDeletes);this.suppressedDeletes=[]}if(changed.length>0){this.notifyChanged(changed)}else{this.notifyChanged()}if(deleted.length>0){this.notifyDeleted(deleted);deleted.forEach(rec=>{if(rec.unlink!==undefined){rec.unlink()}});deleted=[]}}}destroy(){this.minRefreshTime=-1;this.close();this.finalize()}close(force){force=force!=null?force:true;if(this.model!==undefined){this.model.finalize();delete this.model}if(force&&this._remoteData!=null){this._remoteData.close()}this.deleteProperties();this.data.length=0;this._map.clear();this.fireEvent("clear");this.fireEvent("close")}open(tableName,query,callback,scope){query=query||"";this.close(false);this.tableName=tableName;this._remoteData.open(tableName,query,function(response){if(response==null){console.error("Can't open table: ",tableName);if(callback!=null){callback.call(scope,null)}return}if(response.model==null&&response.key!=null||response.fields!=null){response={model:response}}if(response.model!=null&&response.model.fields!=null){const model=response.model;if(!Array.isArray(model.fields)){model.fields=[model.fields]}this.model=new DataListModel(this,model)}scope=scope||this;if(response.data!=null){if(callback!==undefined){callback.call(scope,this.data)}this._needsRefresh=false;this._doRefresh(response.data);this.fireEvent("open",this);this.notifyChanged()}else{this._needsRefresh=true;this.refresh(function(){if(callback!==undefined){callback.call(scope,this.data)}this.fireEvent("open",this);this.notifyChanged()})}if(response.properties!=null){this._doUpdateProperties(response.properties)}else{this.readProperties(true)}},this)}getValues(){return this.data.map(rec=>rec.getValues())}getByKey(key){return this._map.get(key)}delByIndex(ix,count){let i,startix;if(ix<this.data.length){startix=ix+count;if(startix>=this.data.length){startix=this.data.length-1}for(i=startix;i>=ix;i-=1){this.delByRec(this.data[i])}}}delByRec(rec,permanent){let key;if(permanent===undefined){permanent=false}if(rec!==undefined){key=rec.getKey();if(key!=null){this._map.delete(key)}this.data.splice(this.data.indexOf(rec),1);if(key!==undefined&&!permanent){rec._private_.deleted=this.model.getChangeStamp();this._deleted.push(rec)}this.notifyDeleted(rec);this.notifyChanged()}}delByKey(key){if(key!==undefined){this.delByRec(this._map.get(key))}}addRecord(rec){this.data.push(rec);if(rec.getKey()!==undefined){this._map.set(rec.getKey(),rec)}this.notifyChanged(rec);return rec}getRecCopy(rec){return this.model.newRecord(ENC_REC,rec)}add(cfg){return this.addRecord(this.model.newRecord(ENC_OBJ,cfg))}clear(callback){this.revert();this._remoteData.clear(()=>{const deleted=this.data.slice();this.data.length=0;this._map.clear();this._deleted.length=0;if(deleted.length>0){this.notifyDeleted(deleted);this.notifyChanged()}this.fireEvent("clear",this);if(callback!=null&&typeof callback==="function"){callback()}})}_doUpdateProperties(data){data.forEach(prop=>{if(!this.properties.hasOwnProperty(prop.group)){this.properties[prop.group]=new DataListPropertyGroup(this,prop.properties)}else{this.properties[prop.group].update(prop.properties)}this.fireEvent("property-group-changed",prop.group,this.properties[prop.group])})}readProperties(doread){if(doread&&this._remoteData!=null){this._needsRefreshProperties=false;this._remoteData.getProperties(data=>this._doUpdateProperties(data))}}commitProperties(){let v,p,changes=[];if(this._propertyUpdating===false){for(p in this.properties){if(this.properties.hasOwnProperty(p)){v=this.properties[p];if(v.isChanged!==undefined&&v.isChanged()){changes.push({group:p,properties:v.getChanges()});v.clearChanges()}}}if(changes.length>0){this._remoteData.setProperties(changes)}}}refresh(callback){this.readProperties(this._needsRefreshProperties);if(this._needsRefresh){this._needsRefresh=false;if(this._remoteData!=null){this._remoteData.refresh(data=>{this._doRefresh(data);if(callback!==undefined){callback.call(this)}})}}else{this._fastRefresh=true}}_internalDoRefresh(data){const delMap=new Map,delKeys=[];let i,ix,key,newRec,oldRec,rec;if(data.reload){this.data.length=0;this._map.clear()}if(this._deleted.length>0){this._deleted.forEach((rec,i)=>delMap.set(rec.getKey(),i))}if(data.updates!==undefined&&this.model!=null){const updates=Array.isArray(data.updates)?data.updates:[data.updates];for(i=updates.length-1;i>=0;i--){newRec=updates[i];key=decodeRecordKey(this._dataEncoding,this.model,newRec);oldRec=this._map.get(key);if(oldRec!==undefined){oldRec.update(this._dataEncoding,newRec);this.notifyChanged(oldRec)}else{ix=delMap.get(key);if(ix!==undefined){this._deleted[ix].update(this._dataEncoding,newRec)}else{this.addRecord(this.model.newRecord(this._dataEncoding,newRec))}}}}if(data.deletes!==undefined){const updates=Array.isArray(data.deletes)?data.deletes:[data.deletes];for(i=updates.length-1;i>=0;i--){key=updates[i];rec=this._map.get(key);if(rec!==undefined){this.delByRec(this._map.get(key),true)}else{ix=delMap.get(key);if(ix!==undefined){delKeys.push(ix)}}if(delKeys.length>0){delKeys.sort((a,b)=>b-a);delKeys.forEach(ix=>this._deleted.splice(ix,1))}}}if(data.reload){this.fireEvent("reload")}}_doRefresh(data){if(data!=null&&data.success){this.beginUpdate();if(data.fields!=null){this.model=new DataListModel(this,{key:data.key,fields:data.fields})}try{this._internalDoRefresh(data)}finally{this.endUpdate(true);if(data.markers!=null){asArray(data.markers).forEach(m=>this.fireEvent("change-marker",m))}}}}getLocalChanges(){const result={changes:[]};result.changedRecords=this.data.filter(rec=>{let changes;if(rec.isChanged()){changes=rec.getChanges();if(changes!=null){result.changes.push(changes);return true}return false}else{return false}});result.deleted=this._deleted.map(rec=>rec.getKey());return result}isChanged(){const log=this.getLocalChanges();return log.changes.length+log.deleted.length>0}commitRec(rec,callback){if(typeof rec==="number"){rec=this.getByKey(rec)}if(rec.isChanged()){this._remoteData.update([rec.getChanges()],()=>{if(typeof callback==="function"){callback()}})}else{if(typeof callback==="function"){callback()}}}commit(callback){const changeLog=this.getLocalChanges();let changed=false,called=false;this._deleted=[];if(changeLog.deleted.length>0){this._remoteData.remove(changeLog.deleted);changed=true}if(changeLog.changes.length>0){changed=true;called=true;this._remoteData.update(changeLog.changes,function(keys){keys=asArray(keys);changeLog.changedRecords.forEach((crec,i)=>{if(i<keys.length){if(crec.getKey()===undefined){crec.setKey(keys[i]);this._map.set(keys[i],crec)}}});if(callback!=null&&typeof callback==="function"){callback()}},this)}if(changed){this.fireEvent("commit",this);this.refresh()}if(!called&&typeof callback==="function"){callback()}}revert(){for(let i=this.data.length-1;i>=0;i--){if(this.data[i].getKey()===undefined){this.data.splice(i,1)}else if(this.data[i].isChanged()){this.data[i].clearChanges()}}this._deleted.forEach(rec=>{if(rec.isChanged()){rec.clearChanges()}this.addRecord(rec)});this._deleted.length=0;this.fireEvent("revert",this);this.notifyChanged()}}}();adrem.deepEqual=function(){const pSlice=Array.prototype.slice,objectKeys=Object.keys;function isArguments(object){return Object.prototype.toString.call(object)==="[object Arguments]"}function deepEqual(actual,expected,opts){opts=opts||{};if(actual===expected){return true}else if(actual instanceof Date&&expected instanceof Date){return actual.getTime()===expected.getTime()}else if(!actual||!expected||typeof actual!=="object"&&typeof expected!=="object"){return opts.strict?actual===expected:actual==expected}else{return objEquiv(actual,expected,opts)}}function isUndefinedOrNull(value){return value===null||value===undefined}function isBuffer(x){if(!x||typeof x!=="object"||typeof x.length!=="number"){return false}if(typeof x.copy!=="function"||typeof x.slice!=="function"){return false}return!(x.length>0&&typeof x[0]!=="number")}function objEquiv(a,b,opts){let i,key,ka,kb;if(isUndefinedOrNull(a)||isUndefinedOrNull(b)){return false}if(a.prototype!==b.prototype){return false}if(isArguments(a)){if(!isArguments(b)){return false}a=pSlice.call(a);b=pSlice.call(b);return deepEqual(a,b,opts)}if(isBuffer(a)){if(!isBuffer(b)){return false}if(a.length!==b.length){return false}for(i=0;i<a.length;i++){if(a[i]!==b[i]){return false}}return true}try{ka=objectKeys(a);kb=objectKeys(b)}catch(e){return false}if(ka.length!==kb.length){return false}ka.sort();kb.sort();for(i=ka.length-1;i>=0;i--){if(ka[i]!==kb[i]){return false}}for(i=ka.length-1;i>=0;i--){key=ka[i];if(!deepEqual(a[key],b[key],opts)){return false}}return typeof a===typeof b}return deepEqual}();adrem.RemoteDataListStore=RemoteDataListStore;if(typeof module==="object"){module.exports=RemoteDataListStore}});